{"version":3,"sources":["components/Timeline.js","components/Waterfall.js","components/Gantt.js","App.js","serviceWorker.js","index.js"],"names":["Timeline","width","height","chartType","loader","data","type","id","role","Date","options","allowHtml","rootProps","Waterfall","legend","bar","groupWidth","candlestick","fallingColor","strokeWidth","fill","risingColor","Gantt","label","gantt","trackHeight","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ffc21c4c.chunk.js","sourcesContent":["import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nfunction Timeline() {\n  return (\n    <Chart\n      width={\"100%\"}\n      height={\"200px\"}\n      chartType=\"Timeline\"\n      loader={<div>Loading Chart</div>}\n      data={[\n        [\n          { type: \"string\", id: \"Type\" },\n          { type: \"string\", id: \"Desc\" },\n          { type: \"string\", role: \"tooltip\" },\n          { type: \"date\", id: \"Start\" },\n          { type: \"date\", id: \"End\" },\n        ],\n        [\n          \"P1\",\n          null,\n          \"George\",\n          new Date(1789, 3, 29),\n          new Date(1797, 2, 3),\n        ],\n        [\"P2\", null, \"John\", new Date(1797, 2, 3), new Date(1801, 2, 3)],\n        [\n          \"P3\",\n          null,\n          \"Thomas\",\n          new Date(1801, 2, 3),\n          new Date(1809, 2, 3),\n        ],\n      ]}\n      options={{\n        allowHtml: true,\n      }}\n      rootProps={{ \"data-testid\": \"10\" }}\n    />\n  );\n}\n\nexport default Timeline;\n","import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nfunction Waterfall() {\n  return (\n      <Chart\n        width={\"100%\"}\n        height={350}\n        chartType=\"CandlestickChart\"\n        loader={<div>Loading...</div>}\n        data={[\n          [\"day\", \"a\", \"b\", \"c\", \"d\"],\n          [\"Mon\", 20, 28, 38, 45],\n          [\"Tue\", 31, 38, 55, 66],\n          [\"Wed\", 50, 55, 77, 80],\n        ]}\n        options={{\n          legend: \"none\",\n          bar: { groupWidth: \"100%\" }, // Remove space between bars.\n          candlestick: {\n            fallingColor: { strokeWidth: 0, fill: \"#a52714\" }, // red\n            risingColor: { strokeWidth: 0, fill: \"#0f9d58\" }, // green\n          },\n        }}\n        rootProps={{ \"data-testid\": \"2\" }}\n      />\n  );\n}\n\nexport default Waterfall;\n","import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nfunction Gantt() {\n  return (\n    <Chart\n      width={\"100%\"}\n      height={\"400px\"}\n      chartType=\"Gantt\"\n      loader={<div>Loading Chart</div>}\n      data={[\n        [\n          { type: \"string\", label: \"Task ID\" },\n          { type: \"string\", label: \"Task Name\" },\n          { type: \"string\", label: \"Resource\" },\n          { type: \"date\", label: \"Start Date\" },\n          { type: \"date\", label: \"End Date\" },\n          { type: \"number\", label: \"Duration\" },\n          { type: \"number\", label: \"Percent Complete\" },\n          { type: \"string\", label: \"Dependencies\" },\n        ],\n        [\n          \"2014Spring\",\n          \"Spring 2014\",\n          \"spring\",\n          new Date(2014, 2, 22),\n          new Date(2014, 5, 20),\n          null,\n          100,\n          null,\n        ],\n        [\n          \"2014Summer\",\n          \"Summer 2014\",\n          \"summer\",\n          new Date(2014, 5, 21),\n          new Date(2014, 8, 20),\n          null,\n          100,\n          null,\n        ],\n        [\n          \"2014Autumn\",\n          \"Autumn 2014\",\n          \"autumn\",\n          new Date(2014, 8, 21),\n          new Date(2014, 11, 20),\n          null,\n          100,\n          null,\n        ],\n        [\n          \"2014Winter\",\n          \"Winter 2014\",\n          \"winter\",\n          new Date(2014, 11, 21),\n          new Date(2015, 2, 21),\n          null,\n          100,\n          null,\n        ],\n        [\n          \"2015Spring\",\n          \"Spring 2015\",\n          \"spring\",\n          new Date(2015, 2, 22),\n          new Date(2015, 5, 20),\n          null,\n          50,\n          null,\n        ],\n        [\n          \"2015Summer\",\n          \"Summer 2015\",\n          \"summer\",\n          new Date(2015, 5, 21),\n          new Date(2015, 8, 20),\n          null,\n          0,\n          null,\n        ],\n        [\n          \"2015Autumn\",\n          \"Autumn 2015\",\n          \"autumn\",\n          new Date(2015, 8, 21),\n          new Date(2015, 11, 20),\n          null,\n          0,\n          null,\n        ],\n        [\n          \"2015Winter\",\n          \"Winter 2015\",\n          \"winter\",\n          new Date(2015, 11, 21),\n          new Date(2016, 2, 21),\n          null,\n          0,\n          null,\n        ],\n        [\n          \"Football\",\n          \"Football Season\",\n          \"sports\",\n          new Date(2014, 8, 4),\n          new Date(2015, 1, 1),\n          null,\n          100,\n          null,\n        ],\n        [\n          \"Baseball\",\n          \"Baseball Season\",\n          \"sports\",\n          new Date(2015, 2, 31),\n          new Date(2015, 9, 20),\n          null,\n          14,\n          null,\n        ],\n        [\n          \"Basketball\",\n          \"Basketball Season\",\n          \"sports\",\n          new Date(2014, 9, 28),\n          new Date(2015, 5, 20),\n          null,\n          86,\n          null,\n        ],\n        [\n          \"Hockey\",\n          \"Hockey Season\",\n          \"sports\",\n          new Date(2014, 9, 8),\n          new Date(2015, 5, 21),\n          null,\n          89,\n          null,\n        ],\n      ]}\n      options={{\n        height: 400,\n        gantt: {\n          trackHeight: 30,\n        },\n      }}\n      rootProps={{ \"data-testid\": \"2\" }}\n    />\n  );\n}\n\nexport default Gantt;\n","import React from \"react\";\nimport \"./App.css\";\nimport Timeline from \"./components/Timeline\";\nimport Waterfall from \"./components/Waterfall\";\nimport Gantt from \"./components/Gantt\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Timeline chart - Google charts</h1>\n      <Timeline />\n      <h1>Waterfall chart - Google charts</h1>\n      <Waterfall />\n      <h1>Gantt chart - Google charts</h1>\n      <Gantt />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}